"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1598],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,b=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return n?i.createElement(b,o(o({ref:t},c),{},{components:n})):i.createElement(b,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7944:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return d}});var i=n(7462),r=n(3366),a=(n(7294),n(3905)),o=["components"],s={sidebar_position:5},l="StateRegion",p={unversionedId:"API/state and state objects/state-region",id:"API/state and state objects/state-region",title:"StateRegion",description:"implements StateObject",source:"@site/docs/API/state and state objects/state-region.md",sourceDirName:"API/state and state objects",slug:"/API/state and state objects/state-region",permalink:"/brobot/docs/API/state and state objects/state-region",draft:!1,editUrl:"https://jspinak.github.io/brobot/docs/API/state and state objects/state-region.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"SearchRegions",permalink:"/brobot/docs/API/state and state objects/search-regions"},next:{title:"StateLocation",permalink:"/brobot/docs/API/state and state objects/state-location"}},c={},d=[{value:"Fields (see StateObject for details)",id:"fields-see-stateobject-for-details",level:2},{value:"Methods",id:"methods",level:2},{value:"Builder Methods",id:"builder-methods",level:2}],u={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"stateregion"},"StateRegion"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"implements StateObject"),"  "),(0,a.kt)("p",null,"A StateRegion belongs to a State and contains a Region that\nhas a special meaning for its owner State. For example, there\nmay be text in this Region that doesn't appear in any other State.  "),(0,a.kt)("h2",{id:"fields-see-stateobject-for-details"},"Fields (see StateObject for details)"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"private String name"),"  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"private Region searchRegion"),"  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"private StateEnum ownerStateName"),"  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"private int staysVisibleAfterClicked"),(0,a.kt)("br",{parentName:"p"}),"\n","There may be a case where the expected contents of\na StateRegion change when it is clicked. This is however not yet implemented\nas it is a rare condition, but can be set and used by an application if necessary.   "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"private int probabilityExists")," Also not yet implemented. The current version assumes\nStateRegions always exist.   "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"private int timesActedOn"),"  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"private Position position"),"  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"private Anchors anchors"),"  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"private String mockText")," No longer used and will be removed in the next version.\nThis field was previously used, when not empty, to\nsupersede the random generation of text by the mock GetText functions. The recommended\nway now to set specific expected Strings is by adding GetText MatchSnapshots when\ncreating the StateRegion.  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"private MatchHistory matchHistory"),"  "),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"public int x()")," returns searchRegion.x.  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"public int y()")," returns searchRegion.y.   "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"public int w()")," returns searchRegion.w.  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"public int h()")," returns searchRegion.h.  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"public boolean defined()")," returns true if 'searchRegion' is defined.  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"public void addTimesActedOn()")," increments 'timesActedOn' by 1.  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"public void addSnapshot(MatchSnapshot matchSnapshot)")),(0,a.kt)("h2",{id:"builder-methods"},"Builder Methods"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"public Builder called(String name)"),"  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"public Builder withSearchRegion(Region searchRegion)"),"  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"public Builder inState(StateEnum stateName)"),"  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"public Builder setPointLocation(Position position)"),"  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"public Builder addAnchor(Position.Name definedRegionBorder, Position location)"),"  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"public Builder addSnapshot(MatchSnapshot matchSnapshot)"),"  "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"public StateRegion build()")))}m.isMDXComponent=!0}}]);