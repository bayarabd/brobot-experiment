"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8380],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(t),f=i,b=p["".concat(s,".").concat(f)]||p[f]||d[f]||o;return t?r.createElement(b,a(a({ref:n},u),{},{components:t})):r.createElement(b,a({ref:n},u))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var l=2;l<o;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},6703:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),a=["components"],c={sidebar_position:6},s="Define the Capture Region",l={unversionedId:"tutorial-basics/define-capture-region",id:"tutorial-basics/define-capture-region",isDocsHomePage:!1,title:"Define the Capture Region",description:"We now need to define the region where we will capture the image of the island.",source:"@site/docs/tutorial-basics/define-capture-region.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/define-capture-region",permalink:"/brobot/docs/tutorial-basics/define-capture-region",editUrl:"https://jspinak.github.io/brobot/docs/tutorial-basics/define-capture-region.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Transitions",permalink:"/brobot/docs/tutorial-basics/transitions"},next:{title:"Get Island Type",permalink:"/brobot/docs/tutorial-basics/get-island-type"}},u=[],d={toc:u};function p(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"define-the-capture-region"},"Define the Capture Region"),(0,o.kt)("p",null,"We now need to define the region where we will capture the image of the island.\nThe island always appears near the search button, so we use the search button's\nlocation to define our island region.   "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"@Component\npublic class IslandRegion {\n\n    private final Action action;\n    private final World world;\n    private final Island island;\n\n    public IslandRegion(Action action, World world, Island island) {\n        this.action = action;\n        this.world = world;\n        this.island = island;\n    }\n\n    public boolean defined() {\n        if (island.getIslandRegion().defined()) return true;\n        ActionOptions define = new ActionOptions.Builder()\n                .setAction(ActionOptions.Action.DEFINE)\n                .setDefineAs(ActionOptions.DefineAs.MATCH)\n                .setAddX(-50)\n                .setAddY(-250)\n                .setAbsoluteWidth(200)\n                .setAbsoluteHeight(200)\n                .build();\n        ObjectCollection searchButton = new ObjectCollection.Builder()\n                .withImages(world.getSearchButton())\n                .build();\n        Region reg = action.perform(define, searchButton).getDefinedRegion();\n        island.getIslandRegion().setSearchRegion(reg);\n        return island.getIslandRegion().defined();\n    }\n\n    public Region getRegion() {\n        return island.getIslandRegion().getSearchRegion();\n    }\n}\n")))}p.isMDXComponent=!0}}]);