"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2509],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},s=Object.keys(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=i.createContext({}),r=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=r(e.components);return i.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=r(n),h=o,m=d["".concat(c,".").concat(h)]||d[h]||u[h]||s;return n?i.createElement(m,a(a({ref:t},p),{},{components:n})):i.createElement(m,a({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var r=2;r<s;r++)a[r]=n[r];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},520:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return l},metadata:function(){return r},toc:function(){return u}});var i=n(7462),o=n(3366),s=(n(7294),n(3905)),a=["components"],l={sidebar_position:1},c="Basic Actions",r={unversionedId:"API/functions/basic-actions",id:"API/functions/basic-actions",title:"Basic Actions",description:"Basic Actions are simple processes that require a maximum of 1 Find operation.",source:"@site/docs/API/functions/basic-actions.md",sourceDirName:"API/functions",slug:"/API/functions/basic-actions",permalink:"/brobot/docs/API/functions/basic-actions",draft:!1,editUrl:"https://jspinak.github.io/brobot/docs/API/functions/basic-actions.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Matches",permalink:"/brobot/docs/API/data-types/matches"},next:{title:"Composite Actions",permalink:"/brobot/docs/API/functions/composite-actions"}},p={},u=[{value:"Click (CLICK)",id:"click-click",level:2},{value:"DefineRegion (DEFINE)",id:"defineregion-define",level:2},{value:"Find (FIND)",id:"find-find",level:2},{value:"MouseDown (MOUSE_DOWN)",id:"mousedown-mouse_down",level:2},{value:"MouseUp (MOUSE_UP)",id:"mouseup-mouse_up",level:2},{value:"MouseMove (MOVE)",id:"mousemove-move",level:2},{value:"ScrollMouseWheel (SCROLL_MOUSE_WHEEL)",id:"scrollmousewheel-scroll_mouse_wheel",level:2},{value:"GetText (GET_TEXT)",id:"gettext-get_text",level:2},{value:"TypeText (TYPE)",id:"typetext-type",level:2},{value:"Highlight (HIGHLIGHT)",id:"highlight-highlight",level:2},{value:"WaitVanish (VANISH)",id:"waitvanish-vanish",level:2}],d={toc:u};function h(e){var t=e.components,n=(0,o.Z)(e,a);return(0,s.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"basic-actions"},"Basic Actions"),(0,s.kt)("p",null,"Basic Actions are simple processes that require a maximum of 1 Find operation.  "),(0,s.kt)("p",null,"All Actions follow the ActionInterface:  "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"Matches perform(\n        ActionOptions actionOptions, \n        ObjectCollection... objectCollections);\n")),(0,s.kt)("p",null,"Actions are presented here with their class names followed by their Action enums in parentheses.",(0,s.kt)("br",{parentName:"p"}),"\n","Unless specifically stated, methods use only the objects in the first ObjectCollection.  "),(0,s.kt)("h2",{id:"click-click"},"Click (CLICK)"),(0,s.kt)("p",null,"Clicks on an Image Match, Region, or Location."),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"../data-types/actionOptions#click-options"},"Click-specific options")," include:  "),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"ClickType"),(0,s.kt)("li",{parentName:"ul"},"MoveMouseAfterClick"),(0,s.kt)("li",{parentName:"ul"},"LocationAfterClick"),(0,s.kt)("li",{parentName:"ul"},"OffsetLocationsBy")),(0,s.kt)("p",null,"Example: Do a right mouse click, move the mouse after clicking to an\noffset of (30,50) from the click point, repeat the click 3 times, and\npause for 1/2 second between clicks (between the mouse move and the next\nclick)."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"    ActionOptions click = new ActionOptions.Builder()\n            .setAction(ActionOptions.Action.CLICK)\n            .setClickType(ClickType.Type.RIGHT)\n            .setMoveMouseAfterClick(true)\n            .setLocationAfterClickByOffset(30, 50)\n            .setTimesToRepeatIndividualAction(3)\n            .setPauseBetweenActions(.5)\n            .build();\n")),(0,s.kt)("h2",{id:"defineregion-define"},"DefineRegion (DEFINE)"),(0,s.kt)("p",null,"Defines a Region as specified in the ActionOptions. "),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"../data-types/actionOptions#defineas"},"Define-specific options")," include:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"DefineAs: Provides various options for defining the region, including\ndefining it around a match or as the smallest rectangle produced by a\nseries of matches.")),(0,s.kt)("p",null,"Example: Define a new Region around the Match with a minimum similarity\nof 0.6, subtract (-5,-1) from the (x,y) of the Match and set the\nwidth and height of the Region to 296 and 255."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"    ActionOptions defineRegion = new ActionOptions.Builder()\n            .setAction(ActionOptions.Action.DEFINE)\n            .setDefineAs(ActionOptions.DefineAs.MATCH)\n            .setMinSimilarity(.6)\n            .setAddX(-5)\n            .setAddY(-1)\n            .setAbsoluteWidthOfDefinedRegion(296)\n            .setAbsoluteHeightOfDefinedRegion(255)\n            .build();\n")),(0,s.kt)("h2",{id:"find-find"},"Find (FIND)"),(0,s.kt)("p",null,"Finds Images and creates Match objects directly from Regions, Locations, and Matches.  "),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"../data-types/actionOptions#find-options"},"Options")," include:  "),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Find: Specifies whether the first match, the best match, one match per Image, or\nall matches should be returned. "),(0,s.kt)("li",{parentName:"ul"},"TempFind: A user-defined find operation, meant to be used once, that could be added\nas a lambda. "),(0,s.kt)("li",{parentName:"ul"},"Similarity: The minimum similarity score that is required to produce a match."),(0,s.kt)("li",{parentName:"ul"},"DoOnEach: Used with the Find option EACH, DoOnEach specifies whether individual\nImages should be searched for the first match or the best match.")),(0,s.kt)("p",null,"Example #1: Since Find is the default Action, the standard Find can be created\nwithout adding any options. "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"    ActionOptions find = new ActionOptions();\n")),(0,s.kt)("p",null,"The Action also can be called without an ActionOptions\nvariable if using a standard Find: ",(0,s.kt)("inlineCode",{parentName:"p"},"action.perform(objectCollections);")),(0,s.kt)("p",null,"Example #2: Search for a match for each of the Images in the\nObjectCollection, with a maximum of 5 matches. For each max,\nadd a buffer on all sides of 10. Use a minimum similarity of 0.80\nwhen searching, and time out if the operation lasts longer than\n3 seconds. "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"    ActionOptions find = new ActionOptions.Builder()\n            .setAction(ActionOptions.Action.FIND)\n            .setFind(ActionOptions.Find.EACH)\n            .setAddX(-10)\n            .setAddY(-10)\n            .setAddW(20)\n            .setAddH(20)\n            .setMaxWait(3)\n            .setMaxMatchesToActOn(5)\n            .setMinSimilarity(.8)\n            .build();\n")),(0,s.kt)("h2",{id:"mousedown-mouse_down"},"MouseDown (MOUSE_DOWN)"),(0,s.kt)("p",null,"Presses and holds a mouse button.  "),(0,s.kt)("p",null,"The ObjectCollections are not used here.\nThe options used are ",(0,s.kt)("a",{parentName:"p",href:"../data-types/actionOptions#pauses-and-delays"},"pauses")," and\n",(0,s.kt)("a",{parentName:"p",href:"../data-types/actionOptions#clicktype"},"click type"),". An empty Matches object is returned\nand the operation is assumed to be successful."),(0,s.kt)("p",null,"Example: Wait 0.3 seconds before pressing the left mouse button, and\npause 0.5 seconds with the button down. The button remains down when\nthe action is finished."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"    ActionOptions mouseDown = new ActionOptions.Builder()\n            .setAction(ActionOptions.Action.MOUSE_DOWN)\n            .setPauseBeforeMouseDown(.3)\n            .setPauseAfterMouseDown(.5)\n            .build();\n")),(0,s.kt)("h2",{id:"mouseup-mouse_up"},"MouseUp (MOUSE_UP)"),(0,s.kt)("p",null,"Releases a mouse button.  "),(0,s.kt)("p",null,"The ObjectCollections are not used here.\nThe options used are ",(0,s.kt)("a",{parentName:"p",href:"../data-types/actionOptions#pauses-and-delays"},"pauses")," and\n",(0,s.kt)("a",{parentName:"p",href:"../data-types/actionOptions#clicktype"},"click type"),". An empty Matches object is returned\nand the operation is assumed to be successful."),(0,s.kt)("p",null,"Example: Release the right mouse button and pause for 0.4 seconds. If the right\nmouse button was not held down the only effect will be a 0.4 second pause."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"    ActionOptions mouseUp = new ActionOptions.Builder()\n            .setAction(ActionOptions.Action.MOUSE_UP)\n            .setClickType(ClickType.Type.RIGHT)\n            .setPauseAfterMouseUp(.4)\n            .build();\n")),(0,s.kt)("h2",{id:"mousemove-move"},"MouseMove (MOVE)"),(0,s.kt)("p",null,"Moves the mouse to one or more locations.   "),(0,s.kt)("p",null,"There can be multiple points per ObjectCollection if Find.EACH or Find.ALL is used.",(0,s.kt)("br",{parentName:"p"}),"\n","There may be multiple ObjectCollections.",(0,s.kt)("br",{parentName:"p"}),"\n","Points are visited in the following order:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"In the order the ObjectCollection appears"),(0,s.kt)("li",{parentName:"ul"},"Within an ObjectCollection, as recorded by the Find operation:",(0,s.kt)("br",{parentName:"li"}),"1) Images 2) Matches 3) Regions 4) Locations")),(0,s.kt)("p",null,"Example: Move the cursor with a pause between moves of 0.2 seconds. The mouse\nwill not jump from one position to another but will move with a delay of 0.1 seconds\nbetween points, which makes the total delay from one point to another of 0.3 seconds.\nEach Image in all ObjectCollections will be searched. For each Image, the best\nmatch for all Patterns will be used. The entire sequence will happen 2 times, meaning\neach point will be visited twice. "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"    ActionOptions move = new ActionOptions.Builder()\n            .setAction(ActionOptions.Action.MOVE)\n            .setPauseBetweenActions(.2)\n            .setMoveMouseDelay(.1F)\n            .setFind(ActionOptions.Find.EACH)\n            .doOnEach(ActionOptions.DoOnEach.BEST)\n            .setMaxTimesToRepeatActionSequence(2)\n            .build();\n")),(0,s.kt)("h2",{id:"scrollmousewheel-scroll_mouse_wheel"},"ScrollMouseWheel (SCROLL_MOUSE_WHEEL)"),(0,s.kt)("p",null,"Scrolls the mouse wheel up or down."),(0,s.kt)("p",null,"Example: Scroll up."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"    ActionOptions scroll = new ActionOptions.Builder()\n            .setAction(ActionOptions.Action.SCROLL_MOUSE_WHEEL)\n            .setScrollDirection(ActionOptions.ScrollDirection.UP)\n            .build();\n")),(0,s.kt)("h2",{id:"gettext-get_text"},"GetText (GET_TEXT)"),(0,s.kt)("p",null,"Retrieves text from a Region.    "),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"../data-types/actionOptions#gettextuntil"},"Options")," include:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Waiting for text to appear: the action terminates when all Match regions have text."),(0,s.kt)("li",{parentName:"ul"},"Waiting for text to disappear: the action terminates when no Match regions have text.\nIf one of these conditions is not set, GetText will continue to find and save Strings in\nits MatchObjects until it reaches the time or iteration limits set in ActionOptions.\nOne String, stored in the field 'selectedText', is chosen by the class TextSelector,\nwhich makes decisions about which String most likely captures the real text.  ")),(0,s.kt)("p",null,"Example: The objects in ObjectCollections will be searched for or converted into\nMatchObjects. A minimum similarity of .75 will be used when searching for Images.\nFor every MatchObject, its Match height will\nbe extended by 20. The Match regions will then be searched for text, no more\nthan five times, with a pause of 0.5 seconds in between text searches. The operation\nwill not last more than 3 seconds, and will stop once text has been found in\nevery Match region.  "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"    ActionOptions getText = new ActionOptions.Builder()\n            .setAction(ActionOptions.Action.GET_TEXT)\n            .setGetTextUntil(ActionOptions.GetTextUntil.TEXT_APPEARS)\n            .setTimesToRepeatIndividualAction(5)\n            .setMaxWait(3)\n            .setAddH(20)\n            .setPauseBetweenActions(.5)\n            .setMinSimilarity(.75)\n            .build();\n")),(0,s.kt)("h2",{id:"typetext-type"},"TypeText (TYPE)"),(0,s.kt)("p",null,"Types text to the window in focus.  "),(0,s.kt)("p",null,"Types all Strings in the first ObjectCollection.\nThe option PauseBetweenIndividualActions gives the pause between typing Strings.\n",(0,s.kt)("a",{parentName:"p",href:"../data-types/actionOptions#typing"},"Type-specific options")," include:  "),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"TypeDelay sets the delay between characters."),(0,s.kt)("li",{parentName:"ul"},"Modifiers are special keys such as CTRL and ALT that are held down during typing.\nThey can be combined by adding them together.")),(0,s.kt)("p",null,"Example: With a delay between characters of 0.1 seconds, a pause between Strings\nof 0.2 seconds, type all Strings in the first ObjectCollection with the\nSHIFT key held down. Pause for 1 second when this is finished, and then do all\nof this again 1 more time. "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"    ActionOptions type = new ActionOptions.Builder()\n            .setAction(ActionOptions.Action.TYPE)\n            .setModifiers(Key.SHIFT)\n            .setTypeDelay(.1)\n            .setPauseBetweenActions(.2)\n            .setPauseAfterEnd(1)\n            .setMaxTimesToRepeatActionSequence(2)\n            .build();\n")),(0,s.kt)("h2",{id:"highlight-highlight"},"Highlight (HIGHLIGHT)"),(0,s.kt)("p",null,"Highlights found Images and other objects in the first ObjectCollection.  "),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"../data-types/actionOptions#highlighting"},"Highlight-specific options")," include\nhighlighting all at once or one at a time,\nhighlight duration, and highlight color. Acceptable colors include\nblack, blue, cyan, gray, green, magenta, orange, pink, red, white, yellow,\nlightGray, and darkGray. For more colors refer to the Sikuli documentation."),(0,s.kt)("p",null,"Example: Highlight each Match one at a time in magenta for 2 seconds,\nwith a 0.2 pause between highlights."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'    ActionOptions highlight = new ActionOptions.Builder()\n            .setAction(ActionOptions.Action.HIGHLIGHT)\n            .setHighlightAllAtOnce(false)\n            .setHighlightSeconds(2)\n            .setHighlightColor("magenta")\n            .setPauseBetweenActions(.2)\n            .build();\n')),(0,s.kt)("h2",{id:"waitvanish-vanish"},"WaitVanish (VANISH)"),(0,s.kt)("p",null,"Waits for the Images to vanish.  "),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Returns a successful Matches object if at some point no objects are found.  "),(0,s.kt)("li",{parentName:"ul"},"Returns an unsuccessful Matches object when at least one\nobject exists for the entire wait period.  "),(0,s.kt)("li",{parentName:"ul"},"The Matches object will contain a MatchObject for each Image\nfound the last time Find was successful. Therefore, checking if the\nMatches object is empty will not give an indication of success or failure\nof the operation; as a rule, success should be ascertained with the\nisSuccess() method of the Matches object.  ")),(0,s.kt)("p",null,"Example: Searches the Images in the ObjectCollection with a minimum similarity of 0.9.\nThe operation is unsuccessful when one of the Images is still found at the end of 3 seconds\nof searching. If at some point no Images are found, the operation is successful."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"    ActionOptions vanish = new ActionOptions.Builder()\n            .setAction(ActionOptions.Action.VANISH)\n            .setMinSimilarity(.9)\n            .setMaxWait(3)\n            .build();\n")))}h.isMDXComponent=!0}}]);