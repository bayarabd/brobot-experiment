"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5670],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(r),m=o,b=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return r?n.createElement(b,a(a({ref:t},p),{},{components:r})):n.createElement(b,a({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2252:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],l={sidebar_position:2},s="Setup",u={unversionedId:"tutorial-state-structure-builder/setup",id:"tutorial-state-structure-builder/setup",isDocsHomePage:!1,title:"Setup",description:"Start a new Spring Boot Project",source:"@site/docs/tutorial-state-structure-builder/setup.md",sourceDirName:"tutorial-state-structure-builder",slug:"/tutorial-state-structure-builder/setup",permalink:"/brobot/docs/tutorial-state-structure-builder/setup",editUrl:"https://jspinak.github.io/brobot/docs/tutorial-state-structure-builder/setup.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/brobot/docs/tutorial-state-structure-builder/intro"},next:{title:"Initialize Brobot's Environment",permalink:"/brobot/docs/tutorial-state-structure-builder/init-brobot"}},p=[{value:"Start a new Spring Boot Project",id:"start-a-new-spring-boot-project",children:[],level:2},{value:"Add the Brobot Library",id:"add-the-brobot-library",children:[],level:2},{value:"Create Folders for Images",id:"create-folders-for-images",children:[],level:2}],c={toc:p};function d(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"setup"},"Setup"),(0,i.kt)("h2",{id:"start-a-new-spring-boot-project"},"Start a new Spring Boot Project"),(0,i.kt)("p",null,"A Spring Boot project can be created with the ",(0,i.kt)("a",{parentName:"p",href:"https://start.spring.io/"},"Spring Initializr"),"\nor directly in ",(0,i.kt)("a",{parentName:"p",href:"https://www.jetbrains.com/help/idea/spring-boot.html"},"Intellij"),"\nor ",(0,i.kt)("a",{parentName:"p",href:"https://marketplace.eclipse.org/content/spring-tools-4-aka-spring-tool-suite-4"},"Spring Tools 4"),",\nwhich works with Eclipse, Visual Studio Code, and Atom IDE."),(0,i.kt)("h2",{id:"add-the-brobot-library"},"Add the Brobot Library"),(0,i.kt)("p",null,"Version 1.0.3 is needed.  "),(0,i.kt)("p",null,"Maven:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    <dependency>\n      <groupId>io.github.jspinak</groupId>\n      <artifactId>brobot</artifactId>\n      <version>1.0.3</version>\n    </dependency>\n")),(0,i.kt)("p",null,"Gradle:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    implementation 'io.github.jspinak:brobot:1.0.3' \n")),(0,i.kt)("p",null,"Note that Brobot works with Java version 14 or later.",(0,i.kt)("br",{parentName:"p"}),"\n","Don't forget to add JavaPoet as a dependency. JavaPoet writes the files in your\nState Structure.",(0,i.kt)("br",{parentName:"p"}),"\n","The full build.gradle file should look similar to this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    plugins {\n        id 'org.springframework.boot' version '2.6.2'\n        id 'io.spring.dependency-management' version '1.0.11.RELEASE'\n        id 'java'\n    }\n    \n    group = 'com.example'\n    version = '0.0.1-SNAPSHOT'\n    sourceCompatibility = '14'\n    \n    configurations {\n        compileOnly {\n            extendsFrom annotationProcessor\n        }\n    }\n    \n    repositories {\n        mavenCentral()\n    }\n    \n    dependencies {\n        implementation 'org.springframework.boot:spring-boot-starter'\n        compileOnly 'org.projectlombok:lombok'\n        annotationProcessor 'org.projectlombok:lombok'\n        testImplementation 'org.springframework.boot:spring-boot-starter-test'\n        implementation 'io.github.jspinak:brobot:1.0.3'\n        implementation('com.sikulix:sikulixapi:2.0.5') {\n            exclude group: 'org.slf4j', module: 'slf4j-nop'\n        }\n        implementation group: 'com.squareup', name: 'javapoet', version: '1.9.0'\n    }\n")),(0,i.kt)("h2",{id:"create-folders-for-images"},"Create Folders for Images"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Create a folder called ",(0,i.kt)("inlineCode",{parentName:"li"},"images")," to hold the images\nused by your Brobot application to manipulate GUI elements.   "),(0,i.kt)("li",{parentName:"ul"},"Create a folder called ",(0,i.kt)("inlineCode",{parentName:"li"},"screenshots")," to store screenshots captured\nby your Brobot application while you manipulate the target environment manually.  ")),(0,i.kt)("p",null,"The folder structure should look like this (the build folder will be created\nautomatically if using Gradle):  "),(0,i.kt)("img",{src:"https://jspinak.github.io/brobot/img/visual API folders.png",alt:"project structure",width:"200"}))}d.isMDXComponent=!0}}]);